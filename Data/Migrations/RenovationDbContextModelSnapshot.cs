// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data.Migrations
{
    [DbContext(typeof(RenovationDbContext))]
    partial class RenovationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Entities.Entities.AcompteEnt", b =>
                {
                    b.Property<int>("AcompteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DateVersement")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FactureId")
                        .HasColumnType("int");

                    b.Property<int>("ModePaiement")
                        .HasColumnType("int");

                    b.Property<double>("Montant")
                        .HasColumnType("float");

                    b.HasKey("AcompteId");

                    b.HasIndex("FactureId");

                    b.ToTable("Acomptes");
                });

            modelBuilder.Entity("Entities.Entities.ClientEnt", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("TelephoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClientId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("Entities.Entities.DevisEnt", b =>
                {
                    b.Property<int>("DevisId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreatDevis")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModifDevis")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatePaiementDevis")
                        .HasColumnType("datetime2");

                    b.Property<long>("NumDevis")
                        .HasColumnType("bigint");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("DevisId");

                    b.HasIndex("ClientId");

                    b.ToTable("Deviss");
                });

            modelBuilder.Entity("Entities.Entities.FactureEnt", b =>
                {
                    b.Property<int>("FactureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DateFact")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DevisId")
                        .HasColumnType("int");

                    b.Property<long>("NumFacture")
                        .HasColumnType("bigint");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("FactureId");

                    b.HasIndex("DevisId");

                    b.ToTable("Factures");
                });

            modelBuilder.Entity("Entities.Entities.LigneDevisEnt", b =>
                {
                    b.Property<int>("LigneDevisId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Designation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DevisId")
                        .HasColumnType("int");

                    b.Property<double>("PrixUnit")
                        .HasColumnType("float");

                    b.Property<int>("Quantite")
                        .HasColumnType("int");

                    b.HasKey("LigneDevisId");

                    b.HasIndex("DevisId");

                    b.ToTable("LignesDeviss");
                });

            modelBuilder.Entity("Entities.Entities.LigneFactureEnt", b =>
                {
                    b.Property<int>("LigneFactureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Designation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FactureId")
                        .HasColumnType("int");

                    b.Property<double>("PrixUnit")
                        .HasColumnType("float");

                    b.Property<int>("Quantite")
                        .HasColumnType("int");

                    b.HasKey("LigneFactureId");

                    b.HasIndex("FactureId");

                    b.ToTable("LignesFactures");
                });

            modelBuilder.Entity("Entities.Entities.AcompteEnt", b =>
                {
                    b.HasOne("Entities.Entities.FactureEnt", "Facture")
                        .WithMany("Acomptes")
                        .HasForeignKey("FactureId");

                    b.Navigation("Facture");
                });

            modelBuilder.Entity("Entities.Entities.DevisEnt", b =>
                {
                    b.HasOne("Entities.Entities.ClientEnt", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Entities.Entities.FactureEnt", b =>
                {
                    b.HasOne("Entities.Entities.DevisEnt", "Devis")
                        .WithMany()
                        .HasForeignKey("DevisId");

                    b.Navigation("Devis");
                });

            modelBuilder.Entity("Entities.Entities.LigneDevisEnt", b =>
                {
                    b.HasOne("Entities.Entities.DevisEnt", "Devis")
                        .WithMany("LigneDevis")
                        .HasForeignKey("DevisId");

                    b.Navigation("Devis");
                });

            modelBuilder.Entity("Entities.Entities.LigneFactureEnt", b =>
                {
                    b.HasOne("Entities.Entities.FactureEnt", "Facture")
                        .WithMany("LigneFactures")
                        .HasForeignKey("FactureId");

                    b.Navigation("Facture");
                });

            modelBuilder.Entity("Entities.Entities.DevisEnt", b =>
                {
                    b.Navigation("LigneDevis");
                });

            modelBuilder.Entity("Entities.Entities.FactureEnt", b =>
                {
                    b.Navigation("Acomptes");

                    b.Navigation("LigneFactures");
                });
#pragma warning restore 612, 618
        }
    }
}
